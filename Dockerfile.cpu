FROM ubuntu:24.04 AS base

WORKDIR /workspace/

ENV LD_PRELOAD=""

# Install minimal dependencies and uv
RUN <<EOF
#!/bin/bash

main() {
  set -eux -o pipefail
  apt-get update -y
  apt-get install -y --no-install-recommends git curl wget ca-certificates \
    gcc g++ libtcmalloc-minimal4 libnuma-dev ffmpeg libsm6 libxext6 libgl1 jq \
    lsof
  curl -LsSf https://astral.sh/uv/0.7.21/install.sh | bash
  rm -rf /var/lib/apt/lists/*
}

main "$@"
EOF

ENV CCACHE_DIR=/root/.cache/ccache
ENV CMAKE_CXX_COMPILER_LAUNCHER=ccache

ENV PATH="/root/.local/bin:$PATH"
ENV VIRTUAL_ENV="/opt/venv"
ENV UV_PYTHON_INSTALL_DIR=/opt/uv/python
RUN uv venv --python 3.12 --seed ${VIRTUAL_ENV}
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

ENV UV_HTTP_TIMEOUT=500

# Install Python dependencies
ENV PIP_EXTRA_INDEX_URL="https://download.pytorch.org/whl/cpu"
ENV UV_EXTRA_INDEX_URL=${PIP_EXTRA_INDEX_URL}
ENV UV_INDEX_STRATEGY="unsafe-best-match"
ENV UV_LINK_MODE="copy"
RUN --mount=type=cache,target=/root/.cache/uv \
    uv pip install --upgrade pip

RUN echo 'ulimit -c 0' >> ~/.bashrc

######################### BUILD IMAGE #########################
FROM base AS vllm-openai

ENV VLLM_CPU_DISABLE_AVX512=0
ENV VLLM_CPU_AVX512BF16=0
ENV VLLM_CPU_AVX512VNNI=0

RUN <<EOF
#!/bin/bash

main() {
  set -eux -o pipefail

  local v_vn="0.9.2"
  local vllm_url="https://github.com/vllm-project/vllm"
  curl -LsSf $vllm_url/releases/download/v$v_vn/vllm-$v_vn.tar.gz | tar xz
  cd vllm-$v_vn
  uv pip install -r requirements/cpu-build.txt
  VLLM_TARGET_DEVICE=cpu python3 setup.py bdist_wheel
  uv pip install dist/*.whl
  cd -
  rm -rf vllm-$v_vn
}

main "$@"
EOF

