make -f ./scripts/Makefile.build obj=scripts/basic
make -f ./scripts/Makefile.build obj=scripts/dtc
make -f ./scripts/Makefile.build obj=scripts
make -f ./scripts/Makefile.build obj=scripts/selinux \
need-builtin= \
need-modorder= \

make -f ./scripts/Makefile.build obj=scripts/selinux/genheaders \
need-builtin= \
need-modorder= \

make -f ./scripts/Makefile.build obj=scripts/selinux/mdp \
need-builtin= \
need-modorder= \

set -e; mkdir -p include/config/; trap "rm -f include/config/.kernel.release.tmp" EXIT; { echo "6.2.2$(sh ./scripts/setlocalversion .)"; } > include/config/.kernel.release.tmp; if [ ! -r include/config/kernel.release ] || ! cmp -s include/config/kernel.release include/config/.kernel.release.tmp; then : '  UPD     include/config/kernel.release'; mv -f include/config/.kernel.release.tmp include/config/kernel.release; fi
make -f ./scripts/Makefile.asm-generic obj=arch/arm64/include/generated/uapi/asm \
generic=include/uapi/asm-generic
make -f ./scripts/Makefile.asm-generic obj=arch/arm64/include/generated/asm \
generic=include/asm-generic
set -e; mkdir -p include/generated/uapi/linux/; trap "rm -f include/generated/uapi/linux/.version.h.tmp" EXIT; { 	if [ 2 -gt 255 ]; then echo \#define LINUX_VERSION_CODE 393983; else echo \#define LINUX_VERSION_CODE 393730; fi; echo '#define KERNEL_VERSION(a,b,c) (((a) << 16) + ((b) << 8) + ((c) > 255 ? 255 : (c)))'; echo \#define LINUX_VERSION_MAJOR 6; echo \#define LINUX_VERSION_PATCHLEVEL 2; echo \#define LINUX_VERSION_SUBLEVEL 2; } > include/generated/uapi/linux/.version.h.tmp; if [ ! -r include/generated/uapi/linux/version.h ] || ! cmp -s include/generated/uapi/linux/version.h include/generated/uapi/linux/.version.h.tmp; then : '  UPD     include/generated/uapi/linux/version.h'; mv -f include/generated/uapi/linux/.version.h.tmp include/generated/uapi/linux/version.h; fi
set -e; mkdir -p include/generated/; trap "rm -f include/generated/.utsrelease.h.tmp" EXIT; { 	if [ `echo -n "6.2.2+" | wc -c ` -gt 64 ]; then echo '"6.2.2+" exceeds 64 characters' >&2; exit 1; fi; echo \#define UTS_RELEASE \"6.2.2+\"; } > include/generated/.utsrelease.h.tmp; if [ ! -r include/generated/utsrelease.h ] || ! cmp -s include/generated/utsrelease.h include/generated/.utsrelease.h.tmp; then : '  UPD     include/generated/utsrelease.h'; mv -f include/generated/.utsrelease.h.tmp include/generated/utsrelease.h; fi
set -e; mkdir -p include/generated/; trap "rm -f include/generated/.compile.h.tmp" EXIT; { ./scripts/mkcompile_h "aarch64" "clang version 15.0.7 (Fedora 15.0.7-1.fc37)" "ld.lld"; } > include/generated/.compile.h.tmp; if [ ! -r include/generated/compile.h ] || ! cmp -s include/generated/compile.h include/generated/.compile.h.tmp; then : '  UPD     include/generated/compile.h'; mv -f include/generated/.compile.h.tmp include/generated/compile.h; fi
./scripts/remove-stale-files
make -f ./scripts/Makefile.build obj=arch/arm64/tools kapi
make -f ./scripts/Makefile.build obj=scripts/mod
set -e; mkdir -p scripts/mod/; trap "rm -f scripts/mod/.devicetable-offsets.h.tmp" EXIT; { 	 echo "#ifndef __DEVICETABLE_OFFSETS_H__"; echo "#define __DEVICETABLE_OFFSETS_H__"; echo "/*"; echo " * DO NOT MODIFY."; echo " *"; echo " * This file was generated by Kbuild"; echo " */"; echo ""; sed -ne 	's:^[[:space:]]*\.ascii[[:space:]]*"\(.*\)".*:\1:; /^->/{s:->#\(.*\):/* \1 */:; s:^->\([^ ]*\) [\$#]*\([^ ]*\) \(.*\):#define \1 \2 /* \3 */:; s:->::; p;}' < scripts/mod/devicetable-offsets.s; echo ""; echo "#endif"; } > scripts/mod/.devicetable-offsets.h.tmp; if [ ! -r scripts/mod/devicetable-offsets.h ] || ! cmp -s scripts/mod/devicetable-offsets.h scripts/mod/.devicetable-offsets.h.tmp; then : '  UPD     scripts/mod/devicetable-offsets.h'; mv -f scripts/mod/.devicetable-offsets.h.tmp scripts/mod/devicetable-offsets.h; fi
make -f ./scripts/Makefile.build obj=. prepare
set -e; mkdir -p include/generated/; trap "rm -f include/generated/.timeconst.h.tmp" EXIT; { echo 100 | bc -q kernel/time/timeconst.bc; } > include/generated/.timeconst.h.tmp; if [ ! -r include/generated/timeconst.h ] || ! cmp -s include/generated/timeconst.h include/generated/.timeconst.h.tmp; then : '  UPD     include/generated/timeconst.h'; mv -f include/generated/.timeconst.h.tmp include/generated/timeconst.h; fi
set -e; mkdir -p include/generated/; trap "rm -f include/generated/.bounds.h.tmp" EXIT; { 	 echo "#ifndef __LINUX_BOUNDS_H__"; echo "#define __LINUX_BOUNDS_H__"; echo "/*"; echo " * DO NOT MODIFY."; echo " *"; echo " * This file was generated by Kbuild"; echo " */"; echo ""; sed -ne 	's:^[[:space:]]*\.ascii[[:space:]]*"\(.*\)".*:\1:; /^->/{s:->#\(.*\):/* \1 */:; s:^->\([^ ]*\) [\$#]*\([^ ]*\) \(.*\):#define \1 \2 /* \3 */:; s:->::; p;}' < kernel/bounds.s; echo ""; echo "#endif"; } > include/generated/.bounds.h.tmp; if [ ! -r include/generated/bounds.h ] || ! cmp -s include/generated/bounds.h include/generated/.bounds.h.tmp; then : '  UPD     include/generated/bounds.h'; mv -f include/generated/.bounds.h.tmp include/generated/bounds.h; fi
set -e; mkdir -p include/generated/; trap "rm -f include/generated/.asm-offsets.h.tmp" EXIT; { 	 echo "#ifndef __ASM_OFFSETS_H__"; echo "#define __ASM_OFFSETS_H__"; echo "/*"; echo " * DO NOT MODIFY."; echo " *"; echo " * This file was generated by Kbuild"; echo " */"; echo ""; sed -ne 	's:^[[:space:]]*\.ascii[[:space:]]*"\(.*\)".*:\1:; /^->/{s:->#\(.*\):/* \1 */:; s:^->\([^ ]*\) [\$#]*\([^ ]*\) \(.*\):#define \1 \2 /* \3 */:; s:->::; p;}' < arch/arm64/kernel/asm-offsets.s; echo ""; echo "#endif"; } > include/generated/.asm-offsets.h.tmp; if [ ! -r include/generated/asm-offsets.h ] || ! cmp -s include/generated/asm-offsets.h include/generated/.asm-offsets.h.tmp; then : '  UPD     include/generated/asm-offsets.h'; mv -f include/generated/.asm-offsets.h.tmp include/generated/asm-offsets.h; fi
  sh scripts/checksyscalls.sh clang -Wp,-MMD,./.missing-syscalls.d -nostdinc -I./arch/arm64/include -I./arch/arm64/include/generated  -I./include -I./arch/arm64/include/uapi -I./arch/arm64/include/generated/uapi -I./include/uapi -I./include/generated/uapi -include ./include/linux/compiler-version.h -include ./include/linux/kconfig.h -include ./include/linux/compiler_types.h -D__KERNEL__ -mlittle-endian -DCC_USING_PATCHABLE_FUNCTION_ENTRY -DKASAN_SHADOW_SCALE_SHIFT= -Qunused-arguments -fmacro-prefix-map=./= -Wall -Wundef -Werror=strict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -fshort-wchar -fno-PIE -Werror=implicit-function-declaration -Werror=implicit-int -Werror=return-type -Wno-format-security -funsigned-char -std=gnu11 --target=aarch64-linux-gnu -fintegrated-as -Werror=unknown-warning-option -Werror=ignored-optimization-argument -mgeneral-regs-only -DCONFIG_CC_HAS_K_CONSTRAINT=1 -Wno-psabi -fno-asynchronous-unwind-tables -fno-unwind-tables -mbranch-protection=pac-ret+leaf+bti -Wa,-march=armv8.5-a -DARM64_ASM_ARCH='"armv8.5-a"' -DKASAN_SHADOW_SCALE_SHIFT= -fno-delete-null-pointer-checks -Wno-frame-address -Wno-address-of-packed-member -O2 -Wframe-larger-than=1024 -fstack-protector-strong -Wno-gnu -Wno-unused-but-set-variable -Wno-unused-const-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -ftrivial-auto-var-init=zero -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang -fno-stack-clash-protection -fpatchable-function-entry=2 -Wdeclaration-after-statement -Wvla -Wno-pointer-sign -Wcast-function-type -Wimplicit-fallthrough -fno-strict-overflow -fno-stack-check -Werror=date-time -Werror=incompatible-pointer-types -Wno-initializer-overrides -Wno-format -Wformat-extra-args -Wformat-invalid-specifier -Wformat-zero-length -Wnonnull -Wformat-insufficient-args -Wno-sign-compare -Wno-pointer-to-enum-cast -Wno-tautological-constant-out-of-range-compare -Wno-unaligned-access -g    -DKBUILD_MODFILE='"./missing-syscalls"' -DKBUILD_BASENAME='"missing_syscalls"' -DKBUILD_MODNAME='"missing_syscalls"' -D__KBUILD_MODNAME=kmod_missing_syscalls 
make -f ./scripts/Makefile.build obj=scripts scripts/unifdef
make -f ./scripts/Makefile.headersinst obj=include/uapi
make -f ./scripts/Makefile.headersinst obj=arch/arm64/include/uapi
mkdir -p ./tools
make LDFLAGS= MAKEFLAGS=" " O=/home/ecurtin/git/linux1 subdir=tools -C ./tools/ bpf/resolve_btfids
mkdir -p /home/ecurtin/git/linux1/tools/bpf/resolve_btfids && make O=/home/ecurtin/git/linux1 subdir=tools/bpf/resolve_btfids --no-print-directory -C bpf/resolve_btfids 
make -C /home/ecurtin/git/linux1/tools/build CFLAGS= LDFLAGS= /home/ecurtin/git/linux1/tools/bpf/resolve_btfids/fixdep
make -f /home/ecurtin/git/linux1/tools/build/Makefile.build dir=. obj=fixdep
make -C /home/ecurtin/git/linux1/tools/lib/subcmd/ OUTPUT=/home/ecurtin/git/linux1/tools/bpf/resolve_btfids/libsubcmd/ /home/ecurtin/git/linux1/tools/bpf/resolve_btfids/libsubcmd/libsubcmd.a
make -f /home/ecurtin/git/linux1/tools/build/Makefile.build dir=. obj=resolve_btfids
make -f ./scripts/Makefile.build obj=arch/arm64/kernel/vdso \
include/generated/vdso-offsets.h arch/arm64/kernel/vdso/vdso.so
sh ./scripts/rust_is_available.sh -v
***
*** Rust compiler 'rustc' is too new. This may or may not work.
***   Your version:     1.67.1
1.67.1
***   Expected version: 1.66.0
***
***
*** Rust bindings generator 'bindgen' is too new. This may or may not work.
***   Your version:     0.63.0
***   Expected version: 0.56.0
***
make -f ./scripts/Makefile.build obj=rust
set -e; mkdir -p rust/; trap "rm -f rust/.target.json.tmp" EXIT; { ./scripts/generate_rust_target < include/config/auto.conf; } > rust/.target.json.tmp; if [ ! -r rust/target.json ] || ! cmp -s rust/target.json rust/.target.json.tmp; then : '  UPD     rust/target.json'; mv -f rust/.target.json.tmp rust/target.json; fi
make -f ./scripts/Makefile.build obj=. need-builtin=1 need-modorder=1 
make -f ./scripts/Makefile.build obj=drivers \
need-builtin=1 \
need-modorder=1 \

make -f ./scripts/Makefile.build obj=drivers/gpu \
need-builtin=1 \
need-modorder=1 \

make -f ./scripts/Makefile.build obj=drivers/gpu/drm \
need-builtin=1 \
need-modorder=1 \

make -f ./scripts/Makefile.build obj=drivers/gpu/drm/asahi \
need-builtin= \
need-modorder=1 \

  RUST_MODFILE=drivers/gpu/drm/asahi/asahi rustc --edition=2021 -Zbinary_dep_depinfo=y -Dunsafe_op_in_unsafe_fn -Drust_2018_idioms -Dunreachable_pub -Dnon_ascii_idents -Wmissing_docs -Drustdoc::missing_crate_level_docs -Dclippy::correctness -Dclippy::style -Dclippy::suspicious -Dclippy::complexity -Dclippy::perf -Dclippy::let_unit_value -Dclippy::mut_mut -Dclippy::needless_bitwise_bool -Dclippy::needless_continue -Wclippy::dbg_macro --target=./rust/target.json -Cpanic=abort -Cembed-bitcode=n -Clto=n -Cforce-unwind-tables=n -Ccodegen-units=1 -Csymbol-mangling-version=v0 -Crelocation-model=static -Zfunction-sections=n -Dclippy::float_arithmetic -C target-feature="-neon,-fp-armv8" -Z branch-protection=bti,pac-ret,leaf -Copt-level=2 -Cdebug-assertions=n -Coverflow-checks=y -Cforce-frame-pointers=y -Cdebuginfo=2  --cfg MODULE  @./include/generated/rustc_cfg -Zallow-features=allocator_api,const_refs_to_cell,new_uninit -Zcrate-attr=no_std -Zcrate-attr='feature(allocator_api,const_refs_to_cell,new_uninit)' --extern alloc --extern kernel --crate-type rlib --out-dir drivers/gpu/drm/asahi -L ./rust/ --crate-name asahi --emit=dep-info,obj drivers/gpu/drm/asahi/asahi.rs; mv drivers/gpu/drm/asahi/asahi.d drivers/gpu/drm/asahi/.asahi.o.d; sed -i '/^#/d' drivers/gpu/drm/asahi/.asahi.o.d
error[E0432]: unresolved import `kernel::soc::apple::rtkit`
  --> drivers/gpu/drm/asahi/gem.rs:17:5
   |
17 |     soc::apple::rtkit,
   |     ^^^^^^^^^^^^^^^^^ no `rtkit` in `soc::apple`

error[E0432]: unresolved import `kernel::soc::apple::rtkit`
  --> drivers/gpu/drm/asahi/gpu.rs:23:5
   |
23 |     soc::apple::rtkit,
   |     ^^^^^^^^^^^^^^^^^ no `rtkit` in `soc::apple`

error: aborting due to 2 previous errors

For more information about this error, try `rustc --explain E0432`.
make[5]: *** [scripts/Makefile.build:309: drivers/gpu/drm/asahi/asahi.o] Error 1
make[4]: *** [scripts/Makefile.build:504: drivers/gpu/drm/asahi] Error 2
make[3]: *** [scripts/Makefile.build:504: drivers/gpu/drm] Error 2
make[2]: *** [scripts/Makefile.build:504: drivers/gpu] Error 2
make[1]: *** [scripts/Makefile.build:504: drivers] Error 2
make: *** [Makefile:2025: .] Error 2
